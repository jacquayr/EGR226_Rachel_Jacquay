/*-----------------------------------------------------------------------------------------
 * Author:          Rachel Jacquay
 * Course:          EGR 226-902
 * Date:            03/24/2021
 * Project:         Lab 9 Part 2
 * File:            main_part2.c
 * Description:
-----------------------------------------------------------------------------------------*/

// libraries
#include "msp.h"
#include <stdio.h>

// function prototypes
void pin_init(void);
void SysTick_Init(void);
void SysTick_Delay(uint16_t delay);
uint8_t changeNum(uint8_t count);

volatile uint8_t count = 0;

void main(void)
{
    __disable_irq();
	WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;		// stop watchdog timer
	SysTick_Init();
	__enable_irq();

	while (1) {

	}
}

/*--------------------------------------------------------------
 * Function:        SysTick_Init
 *
 * Description:     Initialize the SysTick delay component.
 *
 * Inputs:          none
 *
 * Outputs:         none
 *-------------------------------------------------------------*/
void SysTick_Init(void) {
    SysTick->CTRL = 0;              // disable SysTick during step
    SysTick->LOAD = 0x00FFFFFF;     // max reload value
    SysTick->VAL = 0;               // any write to current value clears it
    SysTick->CTRL = 0x00000007;     // enable SysTick (3 MHz) -> YES TO INTERRUPTS
}


/*--------------------------------------------------------------
 * Function:        SysTick_Delay
 *
 * Description:     Add a delay to make sure the button is
 *                  being pressed and not just bouncing.
 *
 * Inputs:          (unsigned 16-bit int) delay: integer to set the
 *                  length of the timer delay
 *
 * Outputs:         none
 *-------------------------------------------------------------*/
void SysTick_Delay(uint16_t delay) {
    SysTick->LOAD = ((delay * 3000) - 1);           // delay for 1 millisecond per delay value
    SysTick->VAL = 0;                               // any write to current value clears it
    while ((SysTick->CTRL & 0x00010000) == 0);      // wait for flag to be set
}

/*--------------------------------------------------------------
 * Function:        pin_init
 *
 * Description:
 *
 * Inputs:          none
 *
 * Outputs:         none
 *-------------------------------------------------------------*/
void pin_init(void) {
    P4->SEL0 &= ~
}

/*--------------------------------------------------------------
 * Function:        changeNum
 *
 * Description:
 *
 * Inputs:          none
 *
 * Outputs:         none
 *-------------------------------------------------------------*/
void changeNum(void) {

}
